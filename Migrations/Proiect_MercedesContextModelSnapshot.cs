// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proiect_Mercedes.Data;

#nullable disable

namespace Proiect_Mercedes.Migrations
{
    [DbContext(typeof(Proiect_MercedesContext))]
    partial class Proiect_MercedesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proiect_Mercedes.Models.Car", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CarModelID")
                        .HasColumnType("int");

                    b.Property<int?>("CarMotorID")
                        .HasColumnType("int");

                    b.Property<int?>("CarStateID")
                        .HasColumnType("int");

                    b.Property<int?>("CarTransID")
                        .HasColumnType("int");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturingYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModelID")
                        .HasColumnType("int");

                    b.Property<int?>("MotorID")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StateID")
                        .HasColumnType("int");

                    b.Property<int?>("TransmissionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ModelID");

                    b.HasIndex("MotorID");

                    b.HasIndex("StateID");

                    b.HasIndex("TransmissionID");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.Model", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.Motorization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("MotorType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Motorization");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("StateType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("State");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.Transmission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("TransmissionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Transmission");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.Car", b =>
                {
                    b.HasOne("Proiect_Mercedes.Models.Model", "Model")
                        .WithMany("Cars")
                        .HasForeignKey("ModelID");

                    b.HasOne("Proiect_Mercedes.Models.Motorization", "Motor")
                        .WithMany("Cars")
                        .HasForeignKey("MotorID");

                    b.HasOne("Proiect_Mercedes.Models.State", "State")
                        .WithMany("Cars")
                        .HasForeignKey("StateID");

                    b.HasOne("Proiect_Mercedes.Models.Transmission", "Transmission")
                        .WithMany("Cars")
                        .HasForeignKey("TransmissionID");

                    b.Navigation("Model");

                    b.Navigation("Motor");

                    b.Navigation("State");

                    b.Navigation("Transmission");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.Model", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.Motorization", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.State", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Proiect_Mercedes.Models.Transmission", b =>
                {
                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
